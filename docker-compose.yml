version: '3.7'
services:
  prometheus:
    user: root
    image: prom/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.size=150GB'
    volumes:
      - /data/prometheus:/prometheus
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    configs:
      - source: prom_conf
        target: /etc/prometheus/prometheus.yml
      - source: alertmanager_rules
        target: /alertmanager/alert.rules
    deploy:
      placement:
        constraints:
          - node.hostname == amrc-factoryP-1
      restart_policy:
        condition: on-failure
        delay: 5s
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.prometheus.rule=Host(`prometheus.amrc-factoryplus.<domain>`)"
        - "traefik.docker.network=factory-plus"
        - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
        - "traefik.http.routers.prometheus.tls=true"
      resources:
        limits:
          memory: 2048M
        reservations:
          memory: 128M
    networks:
      - factory-plus
  loki:
    image: grafana/loki:2.0.0
    command: -config.file=/etc/loki/loki.yml
    volumes:
      - /data/loki:/loki
    configs:
      - source: loki_conf
        target: /etc/loki/loki.yml
    deploy:
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.loki.rule=Host(`loki.amrc-factoryplus.<domain>`)"
        - "traefik.docker.network=factory-plus"
        - "traefik.http.services.loki.loadbalancer.server.port=3100"
        - "traefik.http.routers.loki.tls=true"
      placement:
        constraints:
          - node.hostname == amrc-factoryP-1
    networks:
      - factory-plus
  alertmanager:
        image: amrc-factoryplus.***REMOVED***:5000/alertmanager:0.20.0
        user: root
        configs:
          - source: alertmanager_conf
            target: /etc/alertmanager/alertmanager.yml
        command:
            - '--config.file=/etc/alertmanager/alertmanager.yml'
        deploy:
          labels:
            - "traefik.enable=true"
            - "traefik.http.routers.alertmanager.rule=Host(`alerts.amrc-factoryplus.<domain>`)"
            - "traefik.docker.network=factory-plus"
            - "traefik.http.services.alertmanager.loadbalancer.server.port=9093"
            - "traefik.http.routers.alertmanager.tls=true"
          placement:
            constraints:
              - node.hostname == amrc-factoryP-1
        networks:
          - factory-plus
  grafana:
    image: grafana/grafana:7.3.4
    volumes:
      - grafana-storage:/var/lib/grafana
    deploy:
      placement:
        constraints:
          - node.hostname == amrc-factoryP-1
      restart_policy:
        condition: on-failure
        delay: 5s
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.grafana.rule=Host(`monitor.amrc-factoryplus.<domain>`)"
        - "traefik.docker.network=factory-plus"
        - "traefik.http.services.grafana.loadbalancer.server.port=3000"
        - "traefik.http.routers.grafana.tls=true"
    networks:
      - factory-plus
  node-exporter:
    image: amrc-factoryplus.***REMOVED***:5000/node-exporter:1.0.1
    networks:
      - factory-plus
    volumes:
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /proc:/host/proc:ro
      - /etc/hostname:/etc/nodename
    configs:
      - source: node_exporter_entrypoint
        target: /docker-entrypoint.sh
    deploy:
      placement:
        constraints:
          - node.platform.arch!=armv7l
      mode: global
      labels:
        - "prometheus-job=node-exporter"
        - "prometheus-port=9100"
    environment:
      - NODE_ID={{.Node.ID}}
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
      - '--collector.textfile.directory=/home/'
      - '--collector.meminfo_numa'
      - '--no-collector.ipvs'
    entrypoint:
       - /bin/sh
       - /docker-entrypoint.sh
  cadvisor:
    image: amrc-factoryplus.<domain>:5000/cadvisor:v0.33.0
    networks:
      - factory-plus
    command: -logtostderr -docker_only
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    deploy:
      placement:
        constraints:
          - node.platform.arch!=armv7l
      mode: global
      labels:
        - "prometheus-job=cadvisor"
        - "prometheus-port=8080"
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M 
  dockerd-exporter:
    image: amrc-factoryplus.<domain>:5000/caddy:0.10.10
    networks:
      - factory-plus
    environment:
      - DOCKER_GWBRIDGE_IP=172.18.0.1
    configs:
      - source: dockerd_config
        target: /etc/caddy/Caddyfile
    deploy:
      placement:
        constraints:
          - node.platform.arch!=armv7l
      mode: global
      labels:
        - "prometheus-job=dockerd-exporter"
        - "prometheus-port=9323"
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M

networks:
  factory-plus:
    external: true
    name: factory-plus

volumes:
  prometheus: {}
  grafana-storage: {}

configs:
   dockerd_config:
    file: ./dockerd-exporter/Caddyfile
   prom_conf:
    file: ./prometheus/conf/prometheus.yml
   alertmanager_rules:
    file: ./alertmanager/conf/alert.rules
   alertmanager_conf:
    file: ./alertmanager/conf/alertmanager.yml
   loki_conf:
    file: ./loki/conf/loki.yml
   node_exporter_entrypoint:
    file: ./node-exporter/docker-entrypoint.sh
